<document>
    <properties>
      <author email="leonid.vysochyn@gmail.com">Leonid Vysochyn</author>
      <title>POI Objects Access</title>
    </properties>
    <body>
        <section name="Overview" id="poiAccessOverview">
        <p>jXLS allows direct access to key POI objects in XLS template. They are available under special bean keys in
        the bean context map. </p>
            <ul>
                <li>workbook    - gives an access to current org.apache.poi.ss.usermodel.Workbook instance</li>
                <li>sheet       - provides an access to current org.apache.poi.ss.usermodel.Sheet object being processed </li>
                <li>hssfRow     - provides an access to current org.apache.poi.ss.usermodel.Row object being processed </li>
            </ul>
            <p>Having access to these objects you can invoke different methods to manipulate current template transformation.
            Next sections show some examples of tasks that can be performed using this approach.</p>
            <p>Note: You can change default keys by which POI objects are available in the bean context map using Configuration class</p>
        </section>
        <section name="Setting Header and Footer Messages" id="headerFooterSet">
            <p>Setting of header and footer messages is easy because org.apache.poi.ss.usermodel.Sheet provides an access to header and footer with
                <code>getHeader()</code> and <code>getFooter()</code> methods. So the next code </p>
            <source>
                ${sheet.getHeader().setLeft('Left Header')}
            </source>
            <p>sets left header of the sheet to 'Left Header' string. Dynamic bean properties also can be used as parameters </p>
            <source>
                ${sheet.getFooter().setCenter(msgBean.footer)}
            </source>
            <p>This sample sets center footer message to the value of <code>footer</code> property of <code>msgBean</code> bean.</p>
        </section>
        <section name="Renaming Sheet" id="renamingSheet">
            <p>Sheet name can be set using <code>setSheetName</code> method of <code>org.apache.poi.ss.usermodel.Workbook</code> class.</p>
            <source>
                ${workbook.setSheetName(0, department.name)}
            </source>
            <p>Above sample sets the name of the first sheet to the value of <code>name</code> property of <code>department</code> bean</p>
        </section>
    </body>
</document>
