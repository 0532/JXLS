<document>
    <properties>
      <author email="leonid.vysochyn@gmail.com">Leonid Vysochyn</author>
      <title>Advanced Collections</title>
    </properties>
    <body>
        <section name="Overview" id="overview">
            <p>This part describes more complex cases when exporting collections.</p>
            <p>Next sections assume that we have two dependent Java beans of type
                <a href="../samples/departmentbean.html">Department</a> and
                <a href="../samples/employeebean.html">Employee</a> which are passed to XLSTransformer in a code like this
            </p>
            <source>
				        Department department;
				        ... //initialization
				        Map beans = new HashMap();
				        beans.put("department", department);
				        XLSTransformer transformer = new XLSTransformer();
				        transformer.transformXLS(xlsTemplateFileName, beans, outputFileName);
            </source>
        </section>
        <section name="Adjacent collections export" id="adjacentCollections">
            <p>This section describes how to export adjacent collections. Using this feature you may specify more
            than one collection in the same row. Also it is possible to export a collection related cells side by side with fixed values cells.
                See <a href="../samples/adjacentlistsample">Adjacent Lists</a> sample.</p>
            <p>The main thing to remember is that for each cell that should be duplicated with some collection (except
            those cells which contain some collection properties) you have to specify the name of the related collection
            after <strong><code>//</code></strong>. For example </p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Department ${dep1.name}</strong>
                    </td>
                    <td><em>Name://dep1.staff</em></td>
                    <td>${dep1.staff.name}</td>
                    <td><em>Payment://dep1.staff</em></td>
                    <td>${dep1.staff.payment}</td>
                    <td>
                        <strong>Department ${dep2.name}</strong>
                    </td>
                    <td><em>Name://dep2.staff</em></td>
                    <td>${dep2.staff.name}</td>
                    <td><em>Payment://dep2.staff</em></td>
                    <td>${dep2.staff.payment}</td>
                </tr>
            </table>
            <p>Here we assumed that we have two <a href="../samples/departmentbean.html">Department</a> beans passed to XLSTransformer
            under keys <code>dep1</code> and <code>dep2</code>.</p>
            <p>You see that <code>Name:</code> cell should be duplicated along with <code>dep1.staff</code>
                collection. It is indicated by specifying <strong>//dep1.staff</strong> or <strong>//dep2.staff</strong>
                in the cell. In the same time cell <code>Department ${dep1.name}</code> does not have such indication
                and will not be duplicated with any collection cells. In this way the output will be like following
            </p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                    <th>C</th>
                    <th>D</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Department IT</strong>
                    </td>
                    <td><em>Name:</em></td>
                    <td>John</td>
                    <td><em>Payment:</em></td>
                    <td>3000.0</td>
                    <td>
                        <strong>Department HR</strong>
                    </td>
                    <td><em>Name:</em></td>
                    <td>Oleg</td>
                    <td><em>Payment:</em></td>
                    <td>2500.0</td>
                </tr>
                <tr>
                    <td>
                        <strong>2</strong>
                    </td>
                    <td>
                    </td>
                    <td><em>Name:</em></td>
                    <td>Neil</td>
                    <td><em>Payment:</em></td>
                    <td>2000.0</td>
                    <td>
                    </td>
                    <td><em>Name:</em></td>
                    <td>Yuri</td>
                    <td><em>Payment:</em></td>
                    <td>2000.0</td>
                </tr>
                <tr>
                    <td>
                        <strong>3</strong>
                    </td>
                    <td>
                    </td>
                    <td><em>Name:</em></td>
                    <td>Jim</td>
                    <td><em>Payment:</em></td>
                    <td>1800.0</td>
                    <td>
                    </td>
                    <td><em>Name:</em></td>
                    <td>Alex</td>
                    <td><em>Payment:</em></td>
                    <td>1700.0</td>
                </tr>
            </table>
        </section>
        <section name="Several Excel rows per collection item" id="severalRowsPerCollectionItem">
            <p>Let's assume that you need to output different properties of every item in the collection in several rows. With
                <a href="http://jxls.sourceforge.net">jXLS</a> it is as easy as adding a number of additional rows in meta section of a cell.
				For example, if you want to output each employee name in the first row and employee payment in the second
                row you should specify your first collection property in the way
            </p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Employee Name:</strong>
                    </td>
                    <td>${department.staff.name}//:2</td>
                </tr>
                <tr>
                    <td>
                        <strong>2</strong>
                    </td>
                    <td>
                        <strong>Employee Payment:</strong>
                    </td>
                    <td>${department.staff.payment}</td>
                </tr>
                <tr>
                    <td>
                        <strong>3</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
            </table>
            <p>The number
                <code>2</code> in
                <code>${department.staff.name}//:2</code> indicates that next 2 rows are also related to the same collection and should be processed for every collection item.
                So we'll have 3 rows per collection item in this sample (3d row is empty)
            </p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Employee Name:</strong>
                    </td>
                    <td>John</td>
                </tr>
                <tr>
                    <td>
                        <strong>2</strong>
                    </td>
                    <td>
                        <strong>Employee Payment:</strong>
                    </td>
                    <td>3000</td>
                </tr>
                <tr>
                    <td>
                        <strong>3</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <strong>4</strong>
                    </td>
                    <td>
                        <strong>Employee Name:</strong>
                    </td>
                    <td>Neil</td>
                </tr>
                <tr>
                    <td>
                        <strong>5</strong>
                    </td>
                    <td>
                        <strong>Employee Payment:</strong>
                    </td>
                    <td>2000</td>
                </tr>
                <tr>
                    <td>
                        <strong>6</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
            </table>
        </section>
        <section id="innerCollections" name="Inner Collections (grouping)">
            <p>When you have a collection of items with inner collections the same syntax can be used to export grouped data. For example if you have a collection of departments you can export every department and all its employees as following: </p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Department</strong>
                    </td>
                    <td>${departments.name}//:4</td>
                </tr>
                <tr>
                    <td>
                        <strong>2</strong>
                    </td>
                    <td>
                        <strong>Staff:</strong>
                    </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <strong>3</strong>
                    </td>
                    <td>
                        <strong>Name</strong>
                    </td>
                    <td>
                        <strong>Payment</strong>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>4</strong>
                    </td>
                    <td>${departments.staff.name}</td>
                    <td>${departments.staff.payment}</td>
                </tr>
                <tr>
                    <td>
                        <strong>5</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
            </table>
            <p>The number
                <code>4</code> in
                <code>${departments.name}//:4</code> specifies that next 4 rows are also related to the
                <code>departments</code> collection. For every department the collection of its employees will be processed in a usual way.
            </p>
            <p>In this way you will get result XLS similar to</p>
            <table>
                <tr>
                    <th/>
                    <th>A</th>
                    <th>B</th>
                </tr>
                <tr>
                    <td>
                        <strong>1</strong>
                    </td>
                    <td>
                        <strong>Department</strong>
                    </td>
                    <td>Software</td>
                </tr>
                <tr>
                    <td>
                        <strong>2</strong>
                    </td>
                    <td>
                        <strong>Staff:</strong>
                    </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <strong>3</strong>
                    </td>
                    <td>
                        <strong>Employee Name</strong>
                    </td>
                    <td>
                        <strong>Employee Payment</strong>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>4</strong>
                    </td>
                    <td>John</td>
                    <td>3000</td>
                </tr>
                <tr>
                    <td>
                        <strong>5</strong>
                    </td>
                    <td>Neil</td>
                    <td>2000</td>
                </tr>
                <tr>
                    <td>
                        <strong>6</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <strong>7</strong>
                    </td>
                    <td>
                        <strong>Department</strong>
                    </td>
                    <td>Design</td>
                </tr>
                <tr>
                    <td>
                        <strong>8</strong>
                    </td>
                    <td>
                        <strong>Staff:</strong>
                    </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <strong>9</strong>
                    </td>
                    <td>
                        <strong>Employee Name</strong>
                    </td>
                    <td>
                        <strong>Employee Payment</strong>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>10</strong>
                    </td>
                    <td>Oleg</td>
                    <td>2500</td>
                </tr>
                <tr>
                    <td>
                        <strong>11</strong>
                    </td>
                    <td>Alex</td>
                    <td>1500</td>
                </tr>
                <tr>
                    <td>
                        <strong>12</strong>
                    </td>
                    <td/>
                    <td/>
                </tr>
            </table>
        </section>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7339856-1");
pageTracker._trackPageview();
} catch(err) {}</script>
   </body>
</document>