<document>
    <properties>
      <author email="leonid.vysochyn@gmail.com">Leonid Vysochyn</author>
      <title>Processing JDBC ResultSet</title>
    </properties>
	<body>
		<section name="Overview" id="overview">
			<p>Basics of processing JDBC ResultSet with <a href="http://jxls.sourceforge.net">jXLS</a> is described
                <a href="reference/resultset.html">here</a>.
            </p>
			<p> Next samples assume we have a table
                <code>employee</code>  with columns
                <code>name, age, payment, bonus, birthDate</code>. XLS template is the same as in
                <a href="collectionsample.html">Simple collection sample</a>
			</p>
			<img src="../images/employeesTemplateXLS.gif" alt="Screenshot of Employees XLS template file"/>
			<p>XLS file
                <a href="../xls/employees.xls">employees.xls</a>
			</p>
			<subsection id="resultset" name="ResultSet">
				<p>This is a source code snippet to query data using
                    <code>org.apache.commons.beanutils.ResultSetDynaClass</code> from <a href="http://jakarta.apache.org/commons/beanutils/">Commons BeanUtils</a> library.
				</p>
				<source>
		                Connection con = ...// get connection
				        Statement stmt = con.createStatement();
				        String query = "SELECT name, age, payment, bonus, birthDate FROM employee";
				        ResultSet rs = stmt.executeQuery(query);
				        Map beans = new HashMap();
				        ResultSetCollection rsc = new ResultSetCollection(rs, false);
				        beans.put( "employee", rsc );
				        XLSTransformer transformer = new XLSTransformer();
				        transformer.transformXLS( templateFileName, beans, destFileName);
                </source>
				<p>An important problem with this approach is that the underlying ResultSet must remain open throughout the period of time that the rows are being processed by jXLS engine. Next approach does not have such restriction. </p>
			</subsection>
			<subsection id="rowSet" name="RowSet">
				<p> When you construct an instance of <code>org.apache.commons.beanutils.RowSetDynaClass</code> from <a href="http://jakarta.apache.org/commons/beanutils/">Commons BeanUtils</a>,
                    the underlying data are copied into a set of in-memory DynaBeans that represent the result.
                    So you can immediately close the <code>ResultSet</code>, normally before you even process the actual data that was returned.
                    But the disadvantage is that you must pay the performance and memory costs of copying the result data.
                    Next code snippet demonstrates how to use RowSet to export JDBC query results. </p>
				<source>
	                    Connection con = ...// get connection
				        Statement stmt = con.createStatement();
				        String query = "SELECT name, age, payment, bonus, birthDate FROM employee";
				        ResultSet rs = stmt.executeQuery(query);
				        // second parameter to RowSetDynaClass constructor indicates
                        // that properties should not be lowercased
				        RowSetDynaClass rsdc = new RowSetDynaClass(rs, false);
				        Map beans = new HashMap();
				        beans.put( "employee", rsdc.getRows() );
				        XLSTransformer transformer = new XLSTransformer();
				        transformer.transformXLS( templateFileName, beans, destFileName);
                </source>
				<p>Result looks like</p>
				<img src="../images/employeesOutputXLS.gif" alt="Screenshot of Employees XLS output"/>
				<p> Excel file is
                    <a href="../xls/employees_output.xls">employees_output.xls</a>
				</p>
			</subsection>
		</section>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7339856-1");
pageTracker._trackPageview();
} catch(err) {}</script>        
	</body>
</document>
