<document>
    <properties>
      <author email="leonid.vysochyn@gmail.com">Leonid Vysochyn</author>
      <title>Collections samples</title>
    </properties>
    <body>
        <section id="overview" name="Overview">
            <p>This section contains several examples demonstrating how to export collections with
                <a href="http://jxls.sourceforge.net">jXLS</a>.
				In all samples we assume there are two Java beans of type
                <a href="departmentbean.html">Department</a> and
                <a href="employeebean.html">Employee</a>
            </p>
        </section>
        <section id="collectionExport" name="Simple collection export">
            <p>This sample demonstrates how to export a collection of employees. Source code is as following</p>
            <source>
			Collection staff = new HashSet();
		        staff.add(new Employee("Derek", 35, 3000, 0.30));
		        staff.add(new Employee("Elsa", 28, 1500, 0.15));
		        staff.add(new Employee("Oleg", 32, 2300, 0.25));
		        staff.add(new Employee("Neil", 34, 2500, 0.00));
		        staff.add(new Employee("Maria", 34, 1700, 0.15));
		        staff.add(new Employee("John", 35, 2800, 0.20));
		        Map beans = new HashMap();
		        beans.put("employee", staff);
		        XLSTransformer transformer = new XLSTransformer();
		        transformer.transformXLS(templateFileName, beans, destFileName);
            </source>
            <p>Template file screenshot</p>
            <img src="../images/employeesTemplateXLS.gif" alt="Screenshot of Employees XLS template file"/>
            <p>You can also download Excel version
                <a href="../xls/employees.xls">employees.xls</a>
            </p>
            <p>Output file looks like</p>
            <img src="../images/employeesOutputXLS.gif" alt="Screenshot of Employees XLS output"/>
            <p> Excel file
                <a href="../xls/employees_output.xls">employees_output.xls</a>
            </p>
        </section>
        <section id="complexBeanExport" name="Complex bean export">
            <p>This sample demonstrates how to export
                <a href="departmentbean.html">Department</a> bean. Source code snippet
            </p>
            <source>
				Department department = new Department("IT");
				//...  initialization is skipped here
			        Map beans = new HashMap();
			        beans.put("department", department);
			        XLSTransformer transformer = new XLSTransformer();
			        // set grouping of rows for "department.staff" collection 
			        transformer.groupCollection("department.staff");
			        transformer.transformXLS(templateFileName, beans, destFileName);
            </source>
            <p>Here is a template file screenshot </p>
            <img src="../images/departmentTemplateXLS.gif" alt="Screenshot of Department XLS template file"/>
            <p>Excel version is here
                <a href="../xls/department.xls">department.xls</a>
            </p>
            <p>Using this template we'll get an output like</p>
            <img src="../images/departmentOutputXLS.gif" alt="Screenshot of Department XLS output"/>
            <p> Excel is here
                <a href="../xls/department_output.xls">department_output.xls</a>
            </p>
        </section>
        <section id="multipleCollectionRowsExport" name="Multiple excel rows for every collection item">
            <p>This sample demonstrates how to export collection with several rows per every collection item. Source code snippet</p>
            <source>
				Department department = new Department("IT");
				//...  initialization is skipped here
			        Map beans = new HashMap();
			        beans.put("department", department);
			        XLSTransformer transformer = new XLSTransformer();
			        transformer.transformXLS(templateFileName, beans, destFileName);
            </source>
            <p>Here is a template file screenshot </p>
            <img src="../images/multiplelistrowsTemplateXLS.gif" alt="Screenshot of multiplelistrows XLS template file"/>
            <p>See excel file for details
                <a href="../xls/multiplelistrows.xls"> multiplelistrows.xls</a>
            </p>
            <p>Using this template we'll get an output like</p>
            <img src="../images/multiplelistrowsOutputXLS.gif" alt="Screenshot of multiplelistrows XLS output"/>
            <p> Excel is here
                <a href="../xls/multiplelistrows_output.xls">multiplelistrows_output.xls</a>
            </p>
        </section>
        <section id="nestedCollections" name="Nested collections">
            <p>This sample demonstrates how to export collections nested in other collections. We export collection of departments and every department contain staff collection. Source code snippet</p>
            <source>
				// create a list of Departments
			        List departments = new ArrayList();
				//... initialization
			        Map beans = new HashMap();
			        beans.put("departments", departments);
			        XLSTransformer transformer = new XLSTransformer();
			        transformer.transformXLS(templateFileName, beans, destFileName);
            </source>
            <p>Template is </p>
            <img src="../images/groupingTemplateXLS.gif" alt="Screenshot of grouping XLS template file"/>
            <p>See also xls file
                <a href="../xls/grouping.xls"> grouping.xls</a>
            </p>
            <p>Output is </p>
            <img src="../images/groupingOutputXLS.gif" alt="Screenshot of grouping XLS output"/>
            <p> Excel is here
                <a href="../xls/grouping_output.xls">grouping_output.xls</a>
            </p>
        </section>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7339856-1");
pageTracker._trackPageview();
} catch(err) {}</script>        
    </body>
</document>
