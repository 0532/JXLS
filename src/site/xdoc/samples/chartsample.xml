<document>
    <properties>
      <author email="leonid.vysochyn@gmail.com">Leonid Vysochyn</author>
      <title>Chart Sample</title>
    </properties>
    <body>
        <section id="introduction" name="Introduction">
            <p>Creating Excel reports containing charts is not difficult with
                <a href="http://jxls.sourceforge.net">jXLS</a>.
             Mainly it is possible because
                <a href="http://poi.apache.org/"> Jakarta POI </a> attempts to keep existing records intact as far as possible.
            </p>
            <section id="chartSample" name="Basic Chart Sample">
                <p>To create a chart in Excel we have to set source data range. Here we assume that these source data takes up a fixed number of rows and all data for the rows are contained in some collection.
	             		To setup this with
                    <a href="http://jxls.sourceforge.net">jXLS</a> we should use
                    <a href="../reference/collections.html#fixedSizeCollections">fixed size collection</a> feature.  Let's look at XLS template screenshot for setting up Payment charts for a list of employees
                </p>
                <img src="../images/chartTemplateXLS.gif" alt="Screenshot of Employee Payment Charts XLS Template"/>
                <p>
                    <a href="../xls/chart.xls">chart.xls</a>
                </p>
                <p>You can see that source data list
                    <code>employee</code> is setup for fixed size collection export. Here is the source code snippet to run the sample
                </p>
                <source>
				        List staff = new ArrayList();
				        staff.add(new Employee("Derek", 35, 3000, 0.30));
				        staff.add(new Employee("Elsa", 28, 1500, 0.15));
				        staff.add(new Employee("Oleg", 32, 2300, 0.25));
				        staff.add(new Employee("Neil", 34, 2500, 0.00));
				        staff.add(new Employee("Maria", 34, 1700, 0.15));
				        staff.add(new Employee("John", 35, 2800, 0.20));
				        staff.add(new Employee("Leonid", 29, 1700, 0.20));
				        Map beans = new HashMap();
				        beans.put("employee", staff);
				        XLSTransformer transformer = new XLSTransformer();
				        transformer.markAsFixedSizeCollection("employee");
				        transformer.transformXLS(templateFileName, beans, destFileName);
                </source>
                <p>You can see that
                    <code>employee</code> list is marked as
                    <a href="../reference/collections.html#fixedSizeCollections">fixed size collection</a> .
                </p>
                <p>Here is the output</p>
                <img src="../images/chartOutputXLS.gif" alt="Screenshot of Employee Payment Charts XLS Output"/>
                <p>
                    <a href="../xls/chart_output.xls">chart_output.xls</a>
                </p>
            </section>
            <section id="dynamicRowsChartSample" name="Dynamic Rows Chart Sample">
                <p>It is possible to create a chart even if the number of source data rows is dynamic.
                    Check the following articles to understand the approach to this
                    http://pubs.logicalexpressions.com/pub0009/LPMArticle.asp?ID=518.
                    http://amateuratbest.blogspot.com/2007/08/excel-charting-in-java.html
                    http://www.tushar-mehta.com/excel/newsgroups/dynamic_charts/index.html
                </p>
            </section>
        </section>
    </body>
</document>
